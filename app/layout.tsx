"use client";
import type { Metadata } from "next";
import "./globals.css";
import Navbar from "@/components/shared/Navbar";
import Newsletter from "@/components/shared/Newsletter";
import Footer from "@/components/shared/Footer";
import { useContext, useEffect } from "react";
import { GlobalContext } from "@/context/context";
import Cart from "@/components/shared/Cart";
import dynamic from "next/dynamic";
import { ToastContainer } from "react-toastify";
import client from "@/utils/StorefrontInit";
import { getCollections } from "@/utils/queries";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const GlobalContextProvider = dynamic(() => import("../context/context"), {
  ssr: false,
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { customLayout, collections, setCollections } =
    useContext(GlobalContext);

  // async function fetchCollections() {
  //   try {
  //     const { data } = await client.request(getCollections, {
  //       variables: {
  //         first: 50,
  //         query: "",
  //       },
  //     });

  //     if (data) {
  //       setCollections(data.collections.nodes);
  //     }
  //   } catch (err: any) {
  //     console.log("Fetch Error: ", err);
  //   }
  // }

  useEffect(() => {
    // fetchCollections()
  }, []);
  
  // useEffect(() => {
  //   console.log("this is collections from context: ", collections);
  // }, [collections]);

  

  return (
    <html lang="en">
      <body className={`antialiased`}>
        <GlobalContextProvider>
          <Cart />
          {customLayout === false && <Navbar />}
          {children}
          {customLayout === false && <Newsletter />}
          {customLayout === false && <Footer />}
          <ToastContainer />
        </GlobalContextProvider>
      </body>
    </html>
  );
}
